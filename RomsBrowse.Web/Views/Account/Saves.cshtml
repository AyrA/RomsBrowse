@model SaveListViewModel
@{
    ViewData["Title"] = "Saved games";
    bool canExpire = Model.DeleteDaysBack > 0;
    bool limitedSaves = Model.MaxSaves > 0;
}
<h1>@ViewData["Title"]</h1>

This page contains a list of all your saved games and saved states.

@if (limitedSaves)
{
    <p>
        You currently have @Model.SaveStates.Count/@Model.MaxSaves save states<br />
        You currently have @Model.SRAMs.Count/@Model.MaxSaves game saves<br />
        The oldest saves are automatically deleted when you exceed these numbers.
        Regardless of the values, you can have one save state, and one game save per game.
    </p>
}
@if (canExpire)
{
    <p>
        States and saves older than @Model.DeleteDaysBack days are deleted at regular intervals.
        To keep a state or save game for longer, run the game and overwrite the save,
        or use the appropriate button in the "actions" column
    </p>
}

<table class="table">
    <tr>
        <td colspan="4"><h2>Save states</h2></td>
    </tr>
    <tr>
        <th>Game</th>
        <th>Preview</th>
        <th>Expires</th>
        <th>Actions</th>
    </tr>
    @if (Model.SaveStates.Count == 0)
    {
        <tr>
            <td colspan="4"><i>No save state files exist yet</i></td>
        </tr>
    }
    @foreach (var state in Model.SaveStates)
    {
        <tr>
            <td>
                <a asp-action="Play" asp-controller="Rom" asp-route-id="@state.GameId" title="Click to play">
                    @state.GameName
                </a><br />
                @state.Platform
            </td>
            <td>
                <img src="@state.GetImageBase64Url()" alt="Screenshot of the exact moment a state was saved" class="screenshot img-thumbnail" />
            </td>
            <td>
                @if (canExpire)
                {
                    var exp = state.Created.AddDays(Model.DeleteDaysBack);
                    var days = exp.Subtract(DateTime.UtcNow);
                    @exp.ToString("R")

                    <br />
                    if (days.Days > 0)
                    {
                        <text>Expires in @days.TotalDays.ToString("0.0") days</text>
                    }
                    else
                    {
                        <span class="alert-danger">Expires in less than a day</span>
                    }
                }
                else
                {
                    <text>-</text>
                }
            </td>
            <td>
                <a href="@state.GetDataBase64Url()"
                   download="@state.SaveGameName"
                   title="Download state to use in your own emulator"
                   class="btn btn-success">&#x1f4be;</a>
                @if (canExpire)
                {
                    <form class="d-inline" method="post" asp-action="ResetTimer">
                        <input type="hidden" name="Id" value="@state.GameId" />
                        <input type="hidden" name="Type" value="State" />
                        <input type="submit" class="btn btn-info" value="&#x23f1;&#xfe0f;"
                               title="Reset expiration timer" />
                    </form>
                }
                <form class="d-inline" method="post" asp-action="DeleteSave">
                    <input type="hidden" name="Id" value="@state.GameId" />
                    <input type="hidden" name="Type" value="State" />
                    <input type="submit" class="btn btn-danger" value="&#x1f5d1;"
                           title="Delete this save" />
                </form>
            </td>
        </tr>
    }
    @*Doing states and SRAM in one table ensures the colums line up*@
    <tr>
        <td colspan="4"><h2>SRAM Data</h2></td>
    </tr>
    <tr>
        <th>Game</th>
        <th>Preview</th>
        <th>Expires</th>
        <th>Actions</th>
    </tr>
    @if (Model.SRAMs.Count == 0)
    {
        <tr>
            <td colspan="4"><i>No SRAM files exist yet</i></td>
        </tr>
    }
    @foreach (var state in Model.SRAMs)
    {
        <tr>
            <td>
                <a asp-action="Play" asp-controller="Rom" asp-route-id="@state.GameId" title="Click to play">
                    @state.GameName
                </a><br />
                @state.Platform
            </td>
            <td>
                <img src="@state.GetImageBase64Url()" alt="Screenshot of when the game was saved" class="screenshot img-thumbnail" />
            </td>
            <td>
                @if (canExpire)
                {
                    var exp = state.Created.AddDays(Model.DeleteDaysBack);
                    var days = exp.Subtract(DateTime.UtcNow);
                    @exp.ToString("R")

                    <br />
                    if (days.Days > 0)
                    {
                        <text>Expires in @days.TotalDays.ToString("0.0") days</text>
                    }
                    else
                    {
                        <span class="alert-danger">Expires in less than a day</span>
                    }
                }
                else
                {
                    <text>-</text>
                }
            </td>
            <td>
                <a href="@state.GetDataBase64Url()"
                   download="@state.SaveGameName"
                   title="Download state to use in your own emulator"
                   class="btn btn-success">&#x1f4be;</a>
                @if (canExpire)
                {
                    <form class="d-inline" method="post" asp-action="ResetTimer">
                        <input type="hidden" name="Id" value="@state.GameId" />
                        <input type="hidden" name="Type" value="SRAM" />
                        <input type="submit" class="btn btn-info" value="&#x23f1;&#xfe0f;"
                               title="Reset expiration timer" />
                    </form>
                }
                <form class="d-inline" method="post" asp-action="DeleteSave">
                    <input type="hidden" name="Id" value="@state.GameId" />
                    <input type="hidden" name="Type" value="SRAM" />
                    <input type="submit" class="btn btn-danger" value="&#x1f5d1;"
                           title="Delete this save" />
                </form>
            </td>
        </tr>
    }
</table>
